""" Задание №3.
Создать функцию, которая анализирует параметры и если хотя-бы один из них
другого типа, то вызывает исключение (на выбор - одно из стандартных или своё
собственное по примеру Задания №2).
В комментарии обосновать свой выбор.

В функции main() независиимо от того было исключение или не было,
всё-равно надо сообщить с какими аргументами вы вызывали свою функцию и
какого типа был каждый аргумент.
"""
# Моё исполнение
import inspect
"""
Решил я таки использовать собственное исключение, чтоб получше разобраться с классами,
ну а еще так мне удобней будет оформить вывод данных в итоге проверки
"""
class TooManyTypes(Exception):
    def __init__(self, type_set):
        self.type_set = type_set

def check_params_type(*args):
    type_set = set()
    for gum in args:
        type_set.add(type(gum))
    if len(type_set) > 1:
        raise TooManyTypes(type_set)
    else:
        print("\nВсе аргументы успешно стали операторами функции!\n")
    return type_set



def main(*args):
    """
    Вызываете свою функцию с тестовыми данными и красиво сообщаете о том, что произошло
    """
    try:
        check_params_type(*args)
    except TooManyTypes as e:
        print("""\nДанные элементы, не подходят, так как они относятся к разным типам, список:
\n{}.\n""".format(e.type_set))
    finally:
        for gum in args:
            print("Элемент '{}' относится к типу {}.".format(gum,type(gum)))


if __name__ == "__main__":
    main(1,False,"True",23.56,(25,54),"Riddle")
