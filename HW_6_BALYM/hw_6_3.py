""" Задание №3.
Создать функцию, которая анализирует параметры и если хотя-бы один из них
другого типа, то вызывает исключение (на выбор - одно из стандартных или своё
собственное по примеру Задания №2).
В комментарии обосновать свой выбор.

В функции main() независиимо от того было исключение или не было,
всё-равно надо сообщить с какими аргументами вы вызывали свою функцию и
какого типа был каждый аргумент.
"""
# Моё исполнение
import inspect
"""
Решил я таки использовать собственное исключение, чтоб получше разобраться с классами,
ну а еще так мне удобней будет оформить вывод данных в итоге проверки
"""
class WrongType(Exception):
    def __init__(self, type_dif, type):
        self.type_dif = type_dif
        self.type = type

def check_params_type(*args):
    for gum in args:
        if type(gum) != type(gum + 1):
            raise WrongType(type(gum), type(gum + 1))



def main(*args):
    """
    Вызываете свою функцию с тестовыми данными и красиво сообщаете о том, что произошло
    """
    try:
        check_params_type(*args)
    except WrongType as e:
        print("\nАргументы не являются однотипными, обнаружено, что помимо {} присутствует {}, возможно и другие.".format(e.type_dif, e.type))
    finally:
        for gum in args:
            print("\nЭлемент '{}' относится к типу {}.".format(gum,type(gum)))


if __name__ == "__main__":
    main(1,23,True,12.3,False,"Chad",23)
